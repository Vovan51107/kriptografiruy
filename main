def kriptografiruy(s, k, lang):
    zagl = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'            #алфавиты
    stroch = 'abcdefghijklmnopqrstuvwxyz'
    rus_zagl = 'БВГДЖЗЙКЛМНПРСТФХЦЧШЩ'
    rus_stroch = 'бвгджзйклмнпрстфхцчшщ'
    s_new = ''

    for curr_letter in s:
            if lang == True:
                lang = 1
                alphabet = stroch
                alphabet_zagl = zagl
            else:
                lang = 2
                alphabet = rus_stroch
                alphabet_zagl = rus_zagl

            if curr_letter.lower() != curr_letter:     #проверка на регистр
                indexx = alphabet_zagl.index(curr_letter) + k   #получение индекса проверяемого символа
                if indexx >= 26:                       #проверка на смещение, выходящее из алфавита
                    outrange = (indexx - 26) // 26 + 1 #вычисление количества необходимых продлений алфавита
                    if outrange <= 0:
                        outrange = 1
                    for rof in range(outrange):          #продление алфавита
                        alphabet_zagl += alphabet_zagl
                s_new += alphabet_zagl[indexx]           #добавление зашиврованного символа в вывод
            else:
                indexx = alphabet.index(curr_letter) + k #получение индекса проверяемого символа
                if indexx >= 26:                       #проверка на смещение, выходящее из алфавита
                    outrange = (indexx - 26) // 26 + 1 #вычисление количества необходимых продлений алфавита
                    if outrange <= 0:
                        outrange = 1
                    for rof in range(outrange):
                        alphabet += alphabet       #продление алфавита
                s_new += alphabet[indexx]         #добавление зашиврованного символа в вывод

        if lang == 1 or lang == 2:
            if curr_letter in stroch or curr_letter in zagl:
                preobrazovatel(False, curr_letter)
            elif curr_letter in rus_stroch or curr_letter in rus_zagl:
                preobrazovatel(True, curr_letter)
            else:
                return 'Error'
